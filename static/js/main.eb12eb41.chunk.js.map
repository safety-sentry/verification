{"version":3,"sources":["assets/img/verify-certificate.png","assets/img/qr-code.svg","assets/img/sample_ceritificate.png","assets/img/ValidCertificate.png","assets/img/InvalidCertificate.jpeg","assets/img/certificate-valid.svg","assets/img/certificate-invalid.svg","assets/img/next-arrow.svg","components/CustomButton/index.js","constants.js","redux/reducers/events.js","assets/img/loading.gif","components/Loader/index.js","components/CertificateStatus/index.js","utils/utils.js","components/QRScanner/index.js","components/VerifyCertificate/index.js","redux/reducers/index.js","redux/store.js","App.js","reportWebVitals.js","index.js"],"names":["CustomButton","children","className","props","monthNames","CertificateDetailsPaths","path","format","data","optional","givenDate","dob","Date","day","getDate","toLocaleString","minimumIntegerDigits","useGrouping","monthName","getMonth","year","getFullYear","formatDate","dose","totalDoses","EVENT_ACTION_TYPES","EVENT_TYPES","initialState","addEventAction","event","type","payload","date","toISOString","Loader","src","LoadingImg","jsigs","require","RSAKeyPair","documentLoader","documentLoaders","node","contexts","credentialsv1","vaccinationContext","vaccinationContextV2","customLoader","url","context","config","certificatePublicKey","get","undefined","contextUrl","documentUrl","document","startsWith","JSON","parse","console","log","CertificateStatus","certificateData","goBack","useState","isLoading","setLoading","isValid","setValid","setData","dispatch","useHistory","useDispatch","checkIfRevokedCertificate","a","axios","post","then","res","extra","catch","e","getDose","i","j","k","ordinal_suffix_of","getCookie","name","parts","cookie","split","length","pop","shift","useEffect","signedJSON","publicKey","SECURITY_CONTEXT_URL","id","controller","publicKeyPem","assertionMethod","key","AssertionProofPurpose","purposes","RsaSignature2018","suites","verify","suite","purpose","compactProof","verified","response","status","credentialSubject","setTimeout","verifyData","CertificateValidImg","CertificateInValidImg","alt","getCertificateStatusAsString","Object","keys","map","index","value","pathOr","style","fontSize","textAlign","replace","onClick","data_payload","stringify","method","headers","window","location","href","error","QRScanner","scanBarcode","canvas","createElement","width","height","ctx","getContext","drawImage","video","getImageData","scanImageData","symbols","sym","onScan","decode","state","hasUserMedia","navigator","mediaDevices","getUserMedia","webkitGetUserMedia","mozGetUserMedia","msGetUserMedia","mountedInstances","push","this","userMediaRequested","requestUserMedia","scanTimer","setInterval","nextProps","videoConstraints","clearInterval","indexOf","splice","stream","getVideoTracks","getAudioTracks","track","stop","URL","revokeObjectURL","sourceSelected","constraints","forEach","instance","handleUserMedia","MediaStreamTrack","getSources","sources","videoSource","source","kind","videoSourceId","constraint","deviceId","Array","isArray","ideal","constraintToSourceId","sourceId","err","setState","onError","srcObject","createObjectURL","margin","autoPlay","playsInline","ref","Component","defaultProps","facingMode","VerifyCertificate","result","setResult","showScanner","setShowScanner","VerifyCertificateImg","marginTop","QRCodeImg","Container","JSZip","loadAsync","contents","files","async","combineReducers","events","action","filter","includes","store","serializedState","localStorage","getItem","loadState","createStore","rootReducer","__REDUX_DEVTOOLS_EXTENSION__","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.eb12eb41.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/verify-certificate.29230f43.png\";","export default __webpack_public_path__ + \"static/media/qr-code.0d1efb4c.svg\";","export default __webpack_public_path__ + \"static/media/sample_ceritificate.1adc63e3.png\";","export default __webpack_public_path__ + \"static/media/ValidCertificate.9047ddaf.png\";","export default __webpack_public_path__ + \"static/media/InvalidCertificate.e250aa03.jpeg\";","export default __webpack_public_path__ + \"static/media/certificate-valid.6e8564be.svg\";","export default __webpack_public_path__ + \"static/media/certificate-invalid.a9ac96af.svg\";","export default __webpack_public_path__ + \"static/media/next-arrow.2fe80e2d.svg\";","import React from \"react\";\nimport \"./index.css\";\n\nexport const CustomButton = ({children, className, ...props}) => {\n    return (\n        <button className={`custom-button ${className}`} {...props}>{children}</button>\n    )\n}","const monthNames = [\n    \"Jan\", \"Feb\", \"Mar\", \"Apr\",\n    \"May\", \"Jun\", \"Jul\", \"Aug\",\n    \"Sep\", \"Oct\", \"Nov\", \"Dec\"\n];\n\nexport function formatDate(givenDate) {\n    const dob = new Date(givenDate);\n    let day = (dob.getDate()).toLocaleString('en-US', {minimumIntegerDigits: 2, useGrouping:false});\n    let monthName = monthNames[dob.getMonth()];\n    let year = dob.getFullYear();\n\n    return `${day}-${monthName}-${year}`;\n}\n\nexport const CertificateDetailsPaths = {\n    \"Name\": {\n        path: [\"credentialSubject\", \"name\"],\n        format: (data) => (data)\n    },\n    \"Age\": {\n        path: [\"credentialSubject\", \"age\"],\n        format: (data) => (data)\n    },\n    \"DOB\": {\n        path: [\"credentialSubject\", \"dob\"],\n        format: (data) => (data),\n        optional: true\n    },\n    \"Gender\": {\n        path: [\"credentialSubject\", \"gender\"],\n        format: (data) => (data)\n    },\n    \"Certificate ID\": {\n        path: [\"evidence\", \"0\", \"certificateId\"],\n        format: (data) => (data)\n    },\n    \"Beneficiary ID\": {\n        path: [\"credentialSubject\", \"refId\"],\n        format: (data) => (data)\n    },\n    \"Vaccine Name\": {\n        path: [\"evidence\", \"0\", \"vaccine\"],\n        format: (data) => (data)\n    },\n    \"Vaccine Type\": {\n        path: [\"evidence\", \"0\", \"prophylaxis\"],\n        format: (data) => (data),\n        optional: true\n    },\n    \"Date of ${dose} Dose\": {\n        path: [\"evidence\", \"0\", \"effectiveStart\"],\n        format: (data) => (formatDate(data))\n    },\n    \"Vaccination Status\": {\n        path: [\"evidence\", \"0\"],\n        format: (data) => {\n            if (data.dose !== data.totalDoses) {\n                return \"Partially Vaccinated\"\n            } else {\n                return \"Fully Vaccinated\"\n            }\n        }\n    },\n    \"Vaccination at\": {\n        path: [\"evidence\", \"0\", \"facility\", \"name\"],\n        format: (data) => (data)\n    },\n    \"Country of Vaccination\": {\n        path: [\"evidence\", \"0\", \"facility\", \"address\", \"addressCountry\"],\n        format: (data) => (data),\n        optional: true\n    }\n};\n","import axios from \"axios\";\n\nconst EVENT_ACTION_TYPES = {\n    ADD_EVENT: \"ADD_EVENT\",\n    REMOVE_EVENT: \"REMOVE_EVENT\"\n};\nexport const EVENT_TYPES = {\n    CERTIFICATE_DOWNLOAD: \"certificate-download\",\n    VALID_VERIFICATION: \"valid-verification\",\n    INVALID_VERIFICATION: \"invalid-verification\",\n    REVOKED_CERTIFICATE: \"revoked-certificate\",\n};\nconst initialState = {\n    data: [],\n};\n\nexport function eventsReducer(state = initialState, action) {\n    switch (action.type) {\n        case EVENT_ACTION_TYPES.ADD_EVENT: {\n            return {\n                ...state,\n                data: [...state.data, {id: state.data.length, ...action.payload}],\n\n            };\n        }\n        case EVENT_ACTION_TYPES.REMOVE_EVENT: {\n            return {\n                ...state,\n                data: state.data.filter(event => !action.payload.includes(event.id)),\n\n            };\n        }\n        default:\n            return state;\n    }\n}\n\nexport const addEventAction = (event) => {\n    return {\n        type: EVENT_ACTION_TYPES.ADD_EVENT,\n        payload: {...event, date: new Date().toISOString()}\n    }\n};\n\nconst removeEventsAction = (eventIds) => {\n    return {\n        type: EVENT_ACTION_TYPES.REMOVE_EVENT,\n        payload: eventIds\n    }\n};\n\nexport const postEvents = ({data}, dispatch) => {\n    if (data.length > 0) {\n        try {\n            axios\n              .post(\"/divoc/api/v1/events/\", data)\n              .then((res) => {\n                  return dispatch(removeEventsAction(data.map(e => e.id)));\n              }).catch((e) => {\n                console.log(e);\n            });\n        } catch (e) {\n            console.log(e);\n        }\n    }\n};","export default __webpack_public_path__ + \"static/media/loading.68d0272c.gif\";","import React from \"react\";\nimport LoadingImg from \"../../assets/img/loading.gif\";\nimport \"./index.css\";\n\nexport const Loader = () => {\n    return (\n        <div className=\"loader-wrapper\">\n            <img src={LoadingImg}/>\n\n        </div>\n    )\n};","import React, {useEffect, useState} from \"react\";\nimport \"./index.css\";\nimport CertificateValidImg from \"../../assets/img/certificate-valid.svg\";\nimport CertificateInValidImg from \"../../assets/img/certificate-invalid.svg\";\nimport NextArrowImg from \"../../assets/img/next-arrow.svg\";\n// import LearnProcessImg from \"../../assets/img/leanr_more_small.png\";\n// import FeedbackSmallImg from \"../../assets/img/feedback-small.png\";\n// import DownloadSmallImg from \"../../assets/img/download-certificate-small.png\";\nimport config from \"../../config\";\nimport {pathOr} from \"ramda\";\nimport {CustomButton} from \"../CustomButton\";\nimport {CertificateDetailsPaths} from \"../../constants\";\nimport {useDispatch} from \"react-redux\";\nimport {addEventAction, EVENT_TYPES} from \"../../redux/reducers/events\";\nimport {useHistory} from \"react-router-dom\";\nimport axios from \"axios\";\nimport {ordinal_suffix_of} from \"../../utils/utils\";\nimport {Loader} from \"../Loader\";\n\nconst jsigs = require('jsonld-signatures');\nconst {RSAKeyPair} = require('crypto-ld');\nconst {documentLoaders} = require('jsonld');\nconst {node: documentLoader} = documentLoaders;\nconst {contexts} = require('security-context');\nconst credentialsv1 = require('../../utils/credentials.json');\nconst {vaccinationContext, vaccinationContextV2} = require('vaccination-context');\n\nconst customLoader = url => {\n    const c = {\n        \"did:india\": config.certificatePublicKey,\n        \"https://example.com/i/india\": config.certificatePublicKey,\n        \"https://w3id.org/security/v1\": contexts.get(\"https://w3id.org/security/v1\"),\n        'https://www.w3.org/2018/credentials#': credentialsv1,\n        \"https://www.w3.org/2018/credentials/v1\": credentialsv1,\n        \"https://cowin.gov.in/credentials/vaccination/v1\": vaccinationContext,\n        \"https://cowin.gov.in/credentials/vaccination/v2\": vaccinationContextV2,\n    };\n    let context = c[url];\n    if (context === undefined) {\n        context = contexts[url];\n    }\n    if (context !== undefined) {\n        return {\n            contextUrl: null,\n            documentUrl: url,\n            document: context\n        };\n    }\n    if (url.startsWith(\"{\")) {\n        return JSON.parse(url);\n    }\n    console.log(\"Fallback url lookup for document :\" + url)\n    return documentLoader()(url);\n};\n\nexport const CertificateStatus = ({certificateData, goBack}) => {\n    const [isLoading, setLoading] = useState(false);\n    const [isValid, setValid] = useState(false);\n    const [data, setData] = useState({});\n    const history = useHistory();\n\n    const dispatch = useDispatch();\n    useEffect(() => {\n        setLoading(true);\n        async function verifyData() {\n            try {\n                const signedJSON = JSON.parse(certificateData);\n                const publicKey = {\n                    '@context': jsigs.SECURITY_CONTEXT_URL,\n                    id: 'did:india',\n                    type: 'RsaVerificationKey2018',\n                    controller: 'https://cowin.gov.in/',\n                    publicKeyPem: config.certificatePublicKey\n                };\n                \n                const controller = {\n                    '@context': jsigs.SECURITY_CONTEXT_URL,\n                    id: 'https://cowin.gov.in/',\n                    publicKey: [publicKey],\n                    // this authorizes this key to be used for making assertions\n                    assertionMethod: [publicKey.id]\n                };\n                const key = new RSAKeyPair({...publicKey});\n                const {AssertionProofPurpose} = jsigs.purposes;\n                const {RsaSignature2018} = jsigs.suites;\n                const result = await jsigs.verify(signedJSON, {\n                    suite: new RsaSignature2018({key}),\n                    purpose: new AssertionProofPurpose({controller}),\n                    documentLoader: customLoader,\n                    compactProof: false\n                });\n                if (result.verified) {\n                    const revokedResponse = await checkIfRevokedCertificate(signedJSON)\n                    if (revokedResponse.response.status !== 200) {\n                        console.log('Signature verified.');\n                        setValid(true);\n                        setData(signedJSON);\n                        dispatch(addEventAction({\n                            type: EVENT_TYPES.VALID_VERIFICATION,\n                            extra: signedJSON.credentialSubject\n                        }));\n                        setLoading(false);\n                        return;\n                    }\n                }\n                dispatch(addEventAction({type: EVENT_TYPES.INVALID_VERIFICATION, extra: signedJSON}));\n                setValid(false);\n                setLoading(false);\n            } catch (e) {\n                console.log('Invalid data', e);\n                setValid(false);\n                dispatch(addEventAction({type: EVENT_TYPES.INVALID_VERIFICATION, extra: certificateData}));\n                setLoading(false);\n            }\n\n        }\n        setTimeout(() => {\n            verifyData()\n        }, 500)\n\n    }, []);\n\n    async function checkIfRevokedCertificate(data) {\n        return axios\n            .post(\"/divoc/api/v1/certificate/revoked\", data)\n            .then((res) => {\n                dispatch(addEventAction({type: EVENT_TYPES.REVOKED_CERTIFICATE, extra: certificateData}));\n                return res\n            }).catch((e) => {\n                console.log(e);\n                return e\n            });\n    }\n\n    function getCertificateStatusAsString(data) {\n        if (!data || !data[\"evidence\"]) {\n            return \"\"\n        }\n\n        const dose = data[\"evidence\"][0][\"dose\"]\n        const totalDoses = data[\"evidence\"][0][\"totalDoses\"] || 2\n\n        if (dose === totalDoses) {\n            return \"Final Certificate for COVID-19 Vaccination\"\n        } else {\n            return `Provisional Certificate for COVID-19 Vaccination (${getDose(data)} Dose)`\n        }\n    }\n\n    function getDose(data) {\n        if (!data || !data[\"evidence\"]) {\n            return \"\"\n        }\n        return ordinal_suffix_of(data[\"evidence\"][0][\"dose\"])\n    }\n\n    function getCookie(name) {\n        const value = `; ${document.cookie}`;\n        const parts = value.split(`; ${name}=`);\n        if (parts.length === 2) return parts.pop().split(';').shift();\n      }\n\n    function updateCovidCertificate(){\n        setLoading(true);\n        let data_payload = JSON.stringify({\n            \"certificate_json_dump\": JSON.stringify(data)\n          });\n\n          // TODO ! Update route\n          let config = {\n            method: 'post',\n            url: 'https://api.safetysentry.xyz/covid_upload',\n            headers: { \n              'token': getCookie(\"token\"), \n              'Content-Type': 'application/json'\n            },\n            data : data_payload\n          };\n          \n          axios(config)\n          .then((response) => {\n              console.log(response.data);\n              if(response.data[\"status\"]){\n                window.location.href = \"/success.html?message=\"+response.data[\"message\"];\n              }else{\n                window.location.href = \"/error.html?message=\"+response.data[\"message\"];\n              }\n            console.log(JSON.stringify(response.data));\n          })\n          .catch((error) => {\n              console.log(error);\n            window.location.href= \"/error.html?message=\"+\"Unexpected Error\";\n          });\n    }\n\n    return (\n        isLoading ? <Loader/> : <div className=\"certificate-status-wrapper\">\n            <img src={isValid ? CertificateValidImg : CertificateInValidImg} alt={\"\"}\n                 className=\"certificate-status-image\"/>\n            <h3 className=\"certificate-status\">\n                {\n                    isValid ? \"Certificate Successfully Verified\" : \"Certificate Invalid\"\n                }\n            </h3>\n            <br/>\n            {\n                isValid && <h5>\n                    {\n                        getCertificateStatusAsString(data)\n                    }\n                </h5>\n            }\n            {\n                isValid && <table className=\"mt-3\">\n                    {\n                        Object.keys(CertificateDetailsPaths).map((key, index) => {\n                            const context = CertificateDetailsPaths[key];\n                            const value = context.format(pathOr(\"NA\", context.path, data));\n                            const show = value !== \"NA\" || (value === \"NA\" && !context.optional)\n                            return (\n                              show && <tr key={index} style={{fontSize:\"smaller\", textAlign: \"left\"}}>\n                                    <td className=\"pr-3\" >{key.replace(\"${dose}\", getDose(data))}</td>\n                                    <td className=\"font-weight-bolder value-col\">{value}</td>\n                                </tr>\n                            )\n                        })\n                    }\n\n                </table>\n            }\n            <br/>\n            {\n                isValid ? <CustomButton className=\"blue-btn m-3\" onClick={updateCovidCertificate}>Confirm & Update</CustomButton>\n                : <p>Sorry 🥲 ! As the certificate is invalid you can't update vaccination certificate<br></br>You can retry</p>\n            }\n        </div>\n    )\n};\n\nexport const SmallInfoCards = ({text, img, onClick, backgroundColor}) => (\n    <div className=\"small-info-card-wrapper mt-3 mb-3\" style={{backgroundColor: backgroundColor}}>\n        <div className=\"w-50 \">\n            <img src={img} alt={\"\"} className=\"small-card-img float-right\"/>\n        </div>\n        <div onClick={onClick}\n             className=\"w-50 d-flex flex-column align-items-start justify-content-center font-weight-bold\">\n            <span>{text}</span>\n            <img src={NextArrowImg} alt={\"\"}/>\n        </div>\n    </div>\n);\n","export function ordinal_suffix_of(i) {\n    const j = i % 10,\n        k = i % 100;\n    if (j == 1 && k != 11) {\n        return i + \"st\";\n    }\n    if (j == 2 && k != 12) {\n        return i + \"nd\";\n    }\n    if (j == 3 && k != 13) {\n        return i + \"rd\";\n    }\n    return i + \"th\";\n}","import React, {Component} from 'react';\nimport './index.css';\nimport {scanImageData} from \"zbar.wasm\";\n\nconst SCAN_PERIOD_MS = 100;\n\nfunction hasGetUserMedia() {\n    return !!(\n        (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) ||\n        navigator.webkitGetUserMedia ||\n        navigator.mozGetUserMedia ||\n        navigator.msGetUserMedia\n    );\n}\n\nexport default class QRScanner extends Component {\n    static defaultProps = {\n        className: '',\n        height: 1000,\n        width: 1000,\n        videoConstraints: {\n            facingMode: \"environment\"\n        }\n    };\n\n\n    static mountedInstances = [];\n\n    static userMediaRequested = false;\n\n    static scanTimer = null;\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            hasUserMedia: false,\n        };\n    }\n\n    componentDidMount() {\n        if (!hasGetUserMedia()) return;\n\n        QRScanner.mountedInstances.push(this);\n\n        if (!this.state.hasUserMedia && !QRScanner.userMediaRequested) {\n            this.requestUserMedia();\n        }\n        QRScanner.scanTimer = setInterval(() => {\n            this.scanBarcode();\n        }, SCAN_PERIOD_MS);\n\n\n    }\n\n    componentWillUpdate(nextProps) {\n        if (\n            JSON.stringify(nextProps.videoConstraints) !==\n            JSON.stringify(this.props.videoConstraints)\n        ) {\n            this.requestUserMedia();\n        }\n    }\n\n    componentWillUnmount() {\n        clearInterval(QRScanner.scanTimer);\n        const index = QRScanner.mountedInstances.indexOf(this);\n        QRScanner.mountedInstances.splice(index, 1);\n\n        QRScanner.userMediaRequested = false;\n        if (QRScanner.mountedInstances.length === 0 && this.state.hasUserMedia) {\n            if (this.stream.getVideoTracks && this.stream.getAudioTracks) {\n                this.stream.getVideoTracks().map(track => track.stop());\n            } else {\n                this.stream.stop();\n            }\n            window.URL.revokeObjectURL(this.state.src);\n        }\n    }\n\n    scanBarcode = async () => {\n\n        let canvas = document.createElement('canvas');\n        canvas.width = this.props.width;\n        canvas.height = this.props.height\n        let ctx = canvas.getContext('2d');\n        ctx.drawImage(this.video, 0, 0, this.props.width, this.props.height);\n        let data = ctx.getImageData(0, 0, canvas.width, canvas.height);\n        const symbols = await scanImageData(data);\n        scanImageData(data)\n        // console.log(symbols, Date.now());\n        for (let i = 0; i < symbols.length; ++i) {\n            const sym = symbols[i];\n\n            this.props.onScan(sym.decode())\n        }\n\n    }\n\n\n    requestUserMedia() {\n        navigator.getUserMedia =\n            navigator.mediaDevices.getUserMedia ||\n            navigator.webkitGetUserMedia ||\n            navigator.mozGetUserMedia ||\n            navigator.msGetUserMedia;\n\n        const sourceSelected = (videoConstraints) => {\n            const constraints = {\n                video: videoConstraints || true,\n            };\n\n            navigator.mediaDevices\n                .getUserMedia(constraints)\n                .then((stream) => {\n                    QRScanner.mountedInstances.forEach(instance =>\n                        instance.handleUserMedia(null, stream),\n                    );\n                })\n                .catch((e) => {\n                    QRScanner.mountedInstances.forEach(instance =>\n                        instance.handleUserMedia(e),\n                    );\n                });\n        };\n\n        if ('mediaDevices' in navigator) {\n            sourceSelected(this.props.videoConstraints);\n        } else {\n            const optionalSource = id => ({optional: [{sourceId: id}]});\n\n            const constraintToSourceId = (constraint) => {\n                const deviceId = (constraint || {}).deviceId;\n\n                if (typeof deviceId === 'string') {\n                    return deviceId;\n                } else if (Array.isArray(deviceId) && deviceId.length > 0) {\n                    return deviceId[0];\n                } else if (typeof deviceId === 'object' && deviceId.ideal) {\n                    return deviceId.ideal;\n                }\n\n                return null;\n            };\n\n            MediaStreamTrack.getSources((sources) => {\n\n                let videoSource = null;\n\n                sources.forEach((source) => {\n                    if (source.kind === 'video') {\n                        videoSource = source.id;\n                    }\n                });\n\n\n                const videoSourceId = constraintToSourceId(this.props.videoConstraints);\n                if (videoSourceId) {\n                    videoSource = videoSourceId;\n                }\n\n                sourceSelected(\n                    optionalSource(videoSource),\n                );\n            });\n        }\n\n        QRScanner.userMediaRequested = true;\n    }\n\n    handleUserMedia(err, stream) {\n        if (err) {\n            this.setState({hasUserMedia: false});\n            this.props.onError(err);\n\n            return;\n        }\n\n        this.stream = stream;\n\n        try {\n            this.video.srcObject = stream;\n            this.setState({hasUserMedia: true});\n        } catch (error) {\n            this.setState({\n                hasUserMedia: true,\n                src: window.URL.createObjectURL(stream),\n            });\n        }\n\n    }\n\n    render() {\n        return (\n            <div id='videoview' style={{ margin : 20 }}>\n                <p>Please wait a bit, if you can not see the camera preview below !</p>\n                <video\n                    autoPlay\n                    width={\"100%\"}\n                    src={this.state.src}\n                    className={this.props.className}\n                    playsInline\n                    style={this.props.style}\n                    ref={(ref) => {\n                        this.video = ref;\n                    }}\n                />\n                <canvas id=\"overlay\" width={this.props.width} height={this.props.height}/>\n            </div>\n        );\n    }\n}","import React, {useState} from \"react\";\nimport \"./index.css\";\nimport VerifyCertificateImg from \"../../assets/img/verify-certificate.png\"\nimport SampleCertificateImg from \"../../assets/img/sample_ceritificate.png\"\nimport ValidCertificateImg from \"../../assets/img/ValidCertificate.png\"\nimport InvalidCertificateImg from \"../../assets/img/InvalidCertificate.jpeg\"\nimport QRCodeImg from \"../../assets/img/qr-code.svg\"\nimport {CertificateStatus} from \"../CertificateStatus\";\nimport {CustomButton} from \"../CustomButton\";\nimport QRScanner from \"../QRScanner\";\nimport JSZip from \"jszip\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nexport const CERTIFICATE_FILE = \"certificate.json\";\n\nexport const VerifyCertificate = () => {\n    const [result, setResult] = useState(\"\");\n    const [showScanner, setShowScanner] = useState(false);\n    const handleScan = data => {\n        if (data) {\n            const zip = new JSZip();\n            zip.loadAsync(data).then((contents) => {\n                return contents.files[CERTIFICATE_FILE].async('text')\n            }).then(function (contents) {\n                setResult(contents)\n            }).catch(err => {\n                    setResult(data)\n                }\n            );\n\n        }\n    };\n    const handleError = err => {\n        console.error(err)\n    };\n    return (\n        <div className=\"container-fluid verify-certificate-wrapper\">\n            {\n                !result &&\n                <>\n                    {!showScanner &&\n                    <>\n                        <img src={VerifyCertificateImg} className=\"banner-img\" alt=\"banner-img\" style={{ marginTop:50 }}/>\n                        <h3 className=\"text-center\">Verify your vaccination certificate</h3>\n                        <CustomButton className=\"green-btn\" onClick={() => setShowScanner(true)}>\n                            <span>Scan QR code</span>\n                            <img className=\"ml-3\" src={QRCodeImg} alt={\"\"}/>\n                        </CustomButton>\n                        <Container className=\"mt-5 p-4 mb-5\">\n                            <h5>Troubleshooting :</h5>\n                            <ul>\n                                <li>The QR scan can take a bit long time. So please have patience</li>\n                                <li>After 2~3 retry, if your certificate QR not detected, Fill this form with all details <a href=\"https://docs.google.com/forms/d/e/1FAIpQLSddh8frBkGj7kMkzGgz9N-_MjApcKCk975KCxYmC7Tr7f6R4w/viewform?usp=sf_link\">👉 CLICK HERE TO OPEN FORM 👈</a><br></br>Certificate will be updated within 3~4 hours.</li>\n                                <li>If you face any error, Don't reload this page. Go to the app and click on the button. Then retry .</li>\n                            </ul>\n                        </Container>\n                    </>}\n                    {showScanner &&\n                    <>\n                        <QRScanner onError={handleError}\n                                   onScan={handleScan}/>\n                        <CustomButton className=\"green-btn\" onClick={() => setShowScanner(false)}>BACK</CustomButton>\n                    </>\n                    }\n                </>\n            }\n            {\n                result && <CertificateStatus certificateData={result} goBack={() => {\n                    setShowScanner(false);\n                    setResult(\"\");\n                }\n                }/>\n            }\n\n\n        </div>\n    )\n};\n","import { combineReducers } from \"redux\";\nimport {eventsReducer} from \"./events\";\n\nexport default combineReducers({ events: eventsReducer });\n","import {createStore} from \"redux\";\nimport rootReducer from \"./reducers\";\n\nconst loadState = () => {\n    try {\n        const serializedState = localStorage.getItem('state');\n        if (serializedState === null) {\n            return undefined;\n        }\n        return JSON.parse(serializedState);\n    } catch (err) {\n        return undefined;\n    }\n};\n\nconst saveState = (state) => {\n    try {\n        const serializedState = JSON.stringify(state);\n        localStorage.setItem('state', serializedState);\n    } catch {\n        // ignore write errors\n    }\n};\n\nconst persistedState = loadState();\n\nexport const store = createStore(\n    rootReducer,\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\n\n","import './App.css';\nimport {VerifyCertificate} from \"./components/VerifyCertificate\";\nimport {Provider} from \"react-redux\";\nimport {store} from \"./redux/store\";\n\nfunction App() {\n  return (\n      <Provider store={store}>\n        <div className=\"App\">\n            <VerifyCertificate />\n        </div>\n      </Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}